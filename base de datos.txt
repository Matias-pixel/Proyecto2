CREATE DATABASE junta2;
use junta2;




CREATE TABLE comuna(
    id int(11) PRIMARY KEY AUTO_INCREMENT,
    nombre varchar(20),
    region varchar(20),
    estado bit


);

CREATE TABLE sector(
	id int primary key AUTO_INCREMENT,
    nombre varchar(20),
    estado bit, 
    comuna_id_fk int,
    
   FOREIGN KEY (comuna_id_fk) REFERENCES comuna(id)
);


CREATE TABLE hogar(
	id int AUTO_INCREMENT PRIMARY KEY,
    calle varchar(30),
    numeracion varchar(30),
    f_creacion datetime,
    estado bit,
    propietario varchar(1),
    sector_id_fk int,
    
    FOREIGN KEY(sector_id_fk) REFERENCES sector(id)
);

CREATE TABLE cargo_directivo(
    id int PRIMARY KEY AUTO_INCREMENT,
    nombre_cargo varchar(40),
    fecha_inicio datetime,
    decha_fin datetime,
    estado bit



);

INSERT INTO cargo_directivo VALUES (null,'vecino', now(),NULL,1);
INSERT INTO cargo_directivo VALUES (null,'presidente', now(),NULL,1);
INSERT INTO cargo_directivo VALUES (null,'secretario', now(),NULL,1);
INSERT INTO cargo_directivo VALUES (null,'tesorero', now(),NULL,1);



CREATE TABLE acta_reunion(
    id int AUTO_INCREMENT PRIMARY key,
    titulo_acta varchar(30),
    razon_reunion varchar(30),
    fecha_acta datetime,

    cargo_directivo_id_fk int,

    FOREIGN KEY(cargo_directivo_id_fk) REFERENCES cargo_directivo(id)


);





create table usuario(
    id int PRIMARY KEY AUTO_INCREMENT,
    rut varchar(12) UNIQUE,
    contrasena varchar (80),
    nombre varchar(20),
    apellido varchar(20),
    f_nacimiento date,
    e_civil varchar (20),
    numero varchar (20),
    correo varchar (50),
    sexo varchar (10),
    etnia varchar (15),
    ocupacion varchar (20),
    discapacidad varchar (20),
    estado bit,
    estado_usuario bit,
    vota varchar (3),

    cargo_directivo_id_fk int,

    FOREIGN KEY(cargo_directivo_id_fk) REFERENCES cargo_directivo(id)
    

);

CREATE TABLE integrante_hogar(
	id int PRIMARY KEY AUTO_INCREMENT,
    tipo_integrante varchar(30),
    parentesco_integrante varchar(30),
	fecha_registro datetime,
    estado bit,
    
    usuario_id_fk int,
    id_hogar_fk int,
    
    FOREIGN KEY(usuario_id_fk) REFERENCES usuario(id),
    FOREIGN KEY(id_hogar_fk) REFERENCES hogar(id)
);

INSERT
usuario
INSERT INTO usuario VALUES (null,'111-1','1234','matias','marchant',now(),'soltero','+569 77143248','matiassss@gmail.com','masculino','ninguna','ninguna','visual',1,0,'si',2);
INSERT INTO usuario VALUES (null,'222-2','12345','jose','arias',now(),'soltero','+569 77143248','matiasss@gmail.com','masculino','ninguna','ninguna','desplazamiento',1,0,'si',3);
INSERT INTO usuario VALUES (null,'333-3','1234','maximiliano','soto',now(),'soltero','+569 77143248','matiasddd@gmail.com','masculino','ninguna','ninguna','Auditiva',1,0,'no',4);
INSERT INTO usuario VALUES (null,'444-4','1234','samanta','miranda',now(),'soltero','+569 77143248','matiasasad@gmail.com','femenina','ninguna','ninguna','Auditiva',1,0,'no',1);
INSERT INTO usuario VALUES (null,'555-5','1234','renata','adios',now(),'soltero','+569 77143248','matiasasd@gmail.com','femenina','ninguna','ninguna','desplazamiento',1,0,'si',1);
INSERT INTO usuario VALUES (null,'666-6','1234','raul','marchant',now(),'soltero','+569 77143248','matiasasdasf@gmail.com','masculino','ninguna','ninguna','Auditiva',1,0,'no',1);
INSERT INTO usuario VALUES (null,'777-7','1234','jose','soto',now(),'soltero','+569 77143248','matiasasfasf@gmail.com','masculino','ninguna','ninguna','desplazamiento',1,0,'si',1);


cargo date

INSERT INTO cargo_directivo VALUES(null,"vecino",now(),1);

CONSULTA INNER JOIN
SELECT usuario.nombre, cargo_directivo.nombre_cargo, acta_reunion.titulo_acta
FROM usuario
INNER JOIN cargo_directivo on usuario.cargo_directivo_id_fk = cargo_directivo.id
INNER JOIN acta_reunion on acta_reunion.cargo_directivo_id_fk = cargo_directivo.id;

SELECT usuario.nombre AS 'HOLA', cargo_directivo.nombre_cargo, acta_reunion.titulo_acta
FROM usuario
INNER JOIN cargo_directivo on usuario.cargo_directivo_id_fk = cargo_directivo.id
INNER JOIN acta_reunion on acta_reunion.cargo_directivo_id_fk = cargo_directivo.id
WHERE cargo_directivo.id= 1;




CREATE TABLE integrante_hogar(
	id int AUTO_INCREMENT PRIMARY KEY,
	tipo_integrante varchar(30),
	parentesco_integrante varchar(30),
	f_registro date,
	estado bit,
	
	usuario_id_fk int,
	hogar_id_fk int,
	
	FOREIGN KEY(usuario_id_fk) REFERENCES usuario(id),
	FOREIGN KEY(hogar_id_fk) REFERENCES hogar(id)

);




USUARIO

INSERT INTO usuario VALUES (null,'admin','admin','Admin',now(),'soltero','+569 77143248','admin@gmail.com','admin','masculino','ninguna','serAdmin','presidente','ninguna','no',1);


SELECT count(integrante_hogar.id) 
FROM hogar
INNER JOIN integrante_hogar ON hogar.id = integrante_hogar.hogar_id_fk
INNER JOIN usuario ON integrante_hogar.usuario_id_fk = usuario.id
WHERE usuario.id = '16';


INSERT INTO integrante_hogar VALUES (null,'jefe','hijo',now(),1,15,6);







CREATE TABLE observacion(
	id int PRIMARY KEY AUTO_INCREMENT,
    comentario varchar(120),
    fecha_hora datetime,
   	ticket_id_fk int,
    estado bit,
    FOREIGN KEY (ticket_id_fk) REFERENCES ticket(id)
);


CREATE TABLE ticket(
	id int AUTO_INCREMENT PRIMARY KEY,
    nombre varchar(30),
    motivo varchar(30),
    fecha_hora datetime,
    estado_ticket bit,
    
  	integrante_id_fk int,
    
    FOREIGN KEY(integrante_id_fk) REFERENCES usuario(id)
    
    


);

CREATE TABLE noticia(
	id int PRIMARY KEY AUTO_INCREMENT,
    titulo varchar(30),
    tipo varchar(30),
    fecha_hora datetime,
    cuerpo varchar (250),

    estado bit,
    
   	usuario_id_fk int,

    
    FOREIGN KEY(usuario_id_fk) REFERENCES usuario(id)

     

);

CREATE TABLE tipo_documento(
    id int primary key AUTO_INCREMENT,
    nombre varchar(40),
    estado bit


);

CREATE TABLE solicitud_documento(
	id int AUTO_INCREMENT PRIMARY KEY,
    fecha_pedido datetime,
    fecha_entrega datetime,
    comentario varchar(120),
    folio varchar(30),
    nombre_retira varchar(50),
    estado bit,
    
    usuario_id_fk int,
    tipo_documento_id_fk int,

    FOREIGN KEY(tipo_documento_id_fk) REFERENCES tipo_documento(id),
    FOREIGN KEY(usuario_id_fk) REFERENCES usuario(id)
);